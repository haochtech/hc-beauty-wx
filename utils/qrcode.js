var QR = function() {
    var s, d, l, u, v, b, h = [ 0, 11, 15, 19, 23, 27, 31, 16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24, 26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28 ], k = [ 3220, 1468, 2713, 1235, 3062, 1890, 2119, 1549, 2344, 2936, 1117, 2583, 1330, 2470, 1667, 2249, 2028, 3780, 481, 4011, 142, 3098, 831, 3445, 592, 2517, 1776, 2234, 1951, 2827, 1070, 2660, 1345, 3177 ], g = [ 30660, 29427, 32170, 30877, 26159, 25368, 27713, 26998, 21522, 20773, 24188, 23371, 17913, 16590, 20375, 19104, 13663, 12392, 16177, 14854, 9396, 8579, 11994, 11245, 5769, 5054, 7399, 6608, 1890, 597, 3340, 2107 ], w = [ 1, 0, 19, 7, 1, 0, 16, 10, 1, 0, 13, 13, 1, 0, 9, 17, 1, 0, 34, 10, 1, 0, 28, 16, 1, 0, 22, 22, 1, 0, 16, 28, 1, 0, 55, 15, 1, 0, 44, 26, 2, 0, 17, 18, 2, 0, 13, 22, 1, 0, 80, 20, 2, 0, 32, 18, 2, 0, 24, 26, 4, 0, 9, 16, 1, 0, 108, 26, 2, 0, 43, 24, 2, 2, 15, 18, 2, 2, 11, 22, 2, 0, 68, 18, 4, 0, 27, 16, 4, 0, 19, 24, 4, 0, 15, 28, 2, 0, 78, 20, 4, 0, 31, 18, 2, 4, 14, 18, 4, 1, 13, 26, 2, 0, 97, 24, 2, 2, 38, 22, 4, 2, 18, 22, 4, 2, 14, 26, 2, 0, 116, 30, 3, 2, 36, 22, 4, 4, 16, 20, 4, 4, 12, 24, 2, 2, 68, 18, 4, 1, 43, 26, 6, 2, 19, 24, 6, 2, 15, 28, 4, 0, 81, 20, 1, 4, 50, 30, 4, 4, 22, 28, 3, 8, 12, 24, 2, 2, 92, 24, 6, 2, 36, 22, 4, 6, 20, 26, 7, 4, 14, 28, 4, 0, 107, 26, 8, 1, 37, 22, 8, 4, 20, 24, 12, 4, 11, 22, 3, 1, 115, 30, 4, 5, 40, 24, 11, 5, 16, 20, 11, 5, 12, 24, 5, 1, 87, 22, 5, 5, 41, 24, 5, 7, 24, 30, 11, 7, 12, 24, 5, 1, 98, 24, 7, 3, 45, 28, 15, 2, 19, 24, 3, 13, 15, 30, 1, 5, 107, 28, 10, 1, 46, 28, 1, 15, 22, 28, 2, 17, 14, 28, 5, 1, 120, 30, 9, 4, 43, 26, 17, 1, 22, 28, 2, 19, 14, 28, 3, 4, 113, 28, 3, 11, 44, 26, 17, 4, 21, 26, 9, 16, 13, 26, 3, 5, 107, 28, 3, 13, 41, 26, 15, 5, 24, 30, 15, 10, 15, 28, 4, 4, 116, 28, 17, 0, 42, 26, 17, 6, 22, 28, 19, 6, 16, 30, 2, 7, 111, 28, 17, 0, 46, 28, 7, 16, 24, 30, 34, 0, 13, 24, 4, 5, 121, 30, 4, 14, 47, 28, 11, 14, 24, 30, 16, 14, 15, 30, 6, 4, 117, 30, 6, 14, 45, 28, 11, 16, 24, 30, 30, 2, 16, 30, 8, 4, 106, 26, 8, 13, 47, 28, 7, 22, 24, 30, 22, 13, 15, 30, 10, 2, 114, 28, 19, 4, 46, 28, 28, 6, 22, 28, 33, 4, 16, 30, 8, 4, 122, 30, 22, 3, 45, 28, 8, 26, 23, 30, 12, 28, 15, 30, 3, 10, 117, 30, 3, 23, 45, 28, 4, 31, 24, 30, 11, 31, 15, 30, 7, 7, 116, 30, 21, 7, 45, 28, 1, 37, 23, 30, 19, 26, 15, 30, 5, 10, 115, 30, 19, 10, 47, 28, 15, 25, 24, 30, 23, 25, 15, 30, 13, 3, 115, 30, 2, 29, 46, 28, 42, 1, 24, 30, 23, 28, 15, 30, 17, 0, 115, 30, 10, 23, 46, 28, 10, 35, 24, 30, 19, 35, 15, 30, 17, 1, 115, 30, 14, 21, 46, 28, 29, 19, 24, 30, 11, 46, 15, 30, 13, 6, 115, 30, 14, 23, 46, 28, 44, 7, 24, 30, 59, 1, 16, 30, 12, 7, 121, 30, 12, 26, 47, 28, 39, 14, 24, 30, 22, 41, 15, 30, 6, 14, 121, 30, 6, 34, 47, 28, 46, 10, 24, 30, 2, 64, 15, 30, 17, 4, 122, 30, 29, 14, 46, 28, 49, 10, 24, 30, 24, 46, 15, 30, 4, 18, 122, 30, 13, 32, 46, 28, 48, 14, 24, 30, 42, 32, 15, 30, 20, 4, 117, 30, 40, 7, 47, 28, 43, 22, 24, 30, 10, 67, 15, 30, 19, 6, 118, 30, 18, 31, 47, 28, 34, 34, 24, 30, 20, 61, 15, 30 ], m = [ 255, 0, 1, 25, 2, 50, 26, 198, 3, 223, 51, 238, 27, 104, 199, 75, 4, 100, 224, 14, 52, 141, 239, 129, 28, 193, 105, 248, 200, 8, 76, 113, 5, 138, 101, 47, 225, 36, 15, 33, 53, 147, 142, 218, 240, 18, 130, 69, 29, 181, 194, 125, 106, 39, 249, 185, 201, 154, 9, 120, 77, 228, 114, 166, 6, 191, 139, 98, 102, 221, 48, 253, 226, 152, 37, 179, 16, 145, 34, 136, 54, 208, 148, 206, 143, 150, 219, 189, 241, 210, 19, 92, 131, 56, 70, 64, 30, 66, 182, 163, 195, 72, 126, 110, 107, 58, 40, 84, 250, 133, 186, 61, 202, 94, 155, 159, 10, 21, 121, 43, 78, 212, 229, 172, 115, 243, 167, 87, 7, 112, 192, 247, 140, 128, 99, 13, 103, 74, 222, 237, 49, 197, 254, 24, 227, 165, 153, 119, 38, 184, 180, 124, 17, 68, 146, 217, 35, 32, 137, 46, 55, 63, 209, 91, 149, 188, 207, 205, 144, 135, 151, 178, 220, 252, 190, 97, 242, 86, 211, 171, 20, 42, 93, 158, 132, 60, 57, 83, 71, 109, 65, 162, 31, 45, 67, 216, 183, 123, 164, 118, 196, 23, 73, 236, 127, 12, 111, 246, 108, 161, 59, 82, 41, 157, 85, 170, 251, 96, 134, 177, 187, 204, 62, 90, 203, 89, 95, 176, 156, 169, 160, 81, 11, 245, 22, 235, 122, 117, 44, 215, 79, 174, 213, 233, 230, 231, 173, 232, 116, 214, 244, 234, 168, 80, 88, 175 ], x = [ 1, 2, 4, 8, 16, 32, 64, 128, 29, 58, 116, 232, 205, 135, 19, 38, 76, 152, 45, 90, 180, 117, 234, 201, 143, 3, 6, 12, 24, 48, 96, 192, 157, 39, 78, 156, 37, 74, 148, 53, 106, 212, 181, 119, 238, 193, 159, 35, 70, 140, 5, 10, 20, 40, 80, 160, 93, 186, 105, 210, 185, 111, 222, 161, 95, 190, 97, 194, 153, 47, 94, 188, 101, 202, 137, 15, 30, 60, 120, 240, 253, 231, 211, 187, 107, 214, 177, 127, 254, 225, 223, 163, 91, 182, 113, 226, 217, 175, 67, 134, 17, 34, 68, 136, 13, 26, 52, 104, 208, 189, 103, 206, 129, 31, 62, 124, 248, 237, 199, 147, 59, 118, 236, 197, 151, 51, 102, 204, 133, 23, 46, 92, 184, 109, 218, 169, 79, 158, 33, 66, 132, 21, 42, 84, 168, 77, 154, 41, 82, 164, 85, 170, 73, 146, 57, 114, 228, 213, 183, 115, 230, 209, 191, 99, 198, 145, 63, 126, 252, 229, 215, 179, 123, 246, 241, 255, 227, 219, 171, 75, 150, 49, 98, 196, 149, 55, 110, 220, 165, 87, 174, 65, 130, 25, 50, 100, 200, 141, 7, 14, 28, 56, 112, 224, 221, 167, 83, 166, 81, 162, 89, 178, 121, 242, 249, 239, 195, 155, 43, 86, 172, 69, 138, 9, 18, 36, 72, 144, 61, 122, 244, 245, 247, 243, 251, 235, 203, 139, 11, 22, 44, 88, 176, 125, 250, 233, 207, 131, 27, 54, 108, 216, 173, 71, 142, 0 ], z = [], p = [], A = [], C = [], F = [], M = 2;
    function R(r, o) {
        var f;
        o < r && (f = r, r = o, o = f), f = o, f *= o, f += o, f >>= 1, C[f += r] = 1;
    }
    function Q(r, o) {
        var f;
        for (A[r + d * o] = 1, f = -2; f < 2; f++) A[r + f + d * (o - 2)] = 1, A[r - 2 + d * (o + f + 1)] = 1, 
        A[r + 2 + d * (o + f)] = 1, A[r + f + 1 + d * (o + 2)] = 1;
        for (f = 0; f < 2; f++) R(r - 1, o + f), R(r + 1, o - f), R(r - f, o - 1), R(r + f, o + 1);
    }
    function _(r) {
        for (;255 <= r; ) r = ((r -= 255) >> 8) + (255 & r);
        return r;
    }
    var q = [];
    function y(r, o, f, e) {
        var a, t, n;
        for (a = 0; a < e; a++) z[f + a] = 0;
        for (a = 0; a < o; a++) {
            if (255 != (n = m[z[r + a] ^ z[f]])) for (t = 1; t < e; t++) z[f + t - 1] = z[f + t] ^ x[_(n + q[e - t])]; else for (t = f; t < f + e; t++) z[t] = z[t + 1];
            z[f + e - 1] = 255 == n ? 0 : x[_(n + q[0])];
        }
    }
    function I(r, o) {
        var f;
        return o < r && (f = r, r = o, o = f), f = o, f += o * o, f >>= 1, C[f += r];
    }
    function N(r) {
        var o, f, e, a;
        switch (r) {
          case 0:
            for (f = 0; f < d; f++) for (o = 0; o < d; o++) o + f & 1 || I(o, f) || (A[o + f * d] ^= 1);
            break;

          case 1:
            for (f = 0; f < d; f++) for (o = 0; o < d; o++) 1 & f || I(o, f) || (A[o + f * d] ^= 1);
            break;

          case 2:
            for (f = 0; f < d; f++) for (o = e = 0; o < d; o++, e++) 3 == e && (e = 0), e || I(o, f) || (A[o + f * d] ^= 1);
            break;

          case 3:
            for (f = a = 0; f < d; f++, a++) for (3 == a && (a = 0), e = a, o = 0; o < d; o++, 
            e++) 3 == e && (e = 0), e || I(o, f) || (A[o + f * d] ^= 1);
            break;

          case 4:
            for (f = 0; f < d; f++) for (a = f >> 1 & 1, o = e = 0; o < d; o++, e++) 3 == e && (e = 0, 
            a = !a), a || I(o, f) || (A[o + f * d] ^= 1);
            break;

          case 5:
            for (f = a = 0; f < d; f++, a++) for (3 == a && (a = 0), o = e = 0; o < d; o++, 
            e++) 3 == e && (e = 0), (o & f & 1) + !(!e | !a) || I(o, f) || (A[o + f * d] ^= 1);
            break;

          case 6:
            for (f = a = 0; f < d; f++, a++) for (3 == a && (a = 0), o = e = 0; o < d; o++, 
            e++) 3 == e && (e = 0), (o & f & 1) + (e && e == a) & 1 || I(o, f) || (A[o + f * d] ^= 1);
            break;

          case 7:
            for (f = a = 0; f < d; f++, a++) for (3 == a && (a = 0), o = e = 0; o < d; o++, 
            e++) 3 == e && (e = 0), (e && e == a) + (o + f & 1) & 1 || I(o, f) || (A[o + f * d] ^= 1);
        }
    }
    var e = 3, S = 3, a = 40, j = 10;
    function B(r) {
        var o, f = 0;
        for (o = 0; o <= r; o++) 5 <= F[o] && (f += e + F[o] - 5);
        for (o = 3; o < r - 1; o += 2) F[o - 2] == F[o + 2] && F[o + 2] == F[o - 1] && F[o - 1] == F[o + 1] && 3 * F[o - 1] == F[o] && (0 == F[o - 3] || r < o + 3 || 3 * F[o - 3] >= 4 * F[o] || 3 * F[o + 3] >= 4 * F[o]) && (f += a);
        return f;
    }
    function D() {
        var r, o, f, e, a, t = 0, n = 0;
        for (o = 0; o < d - 1; o++) for (r = 0; r < d - 1; r++) (A[r + d * o] && A[r + 1 + d * o] && A[r + d * (o + 1)] && A[r + 1 + d * (o + 1)] || !(A[r + d * o] || A[r + 1 + d * o] || A[r + d * (o + 1)] || A[r + 1 + d * (o + 1)])) && (t += S);
        for (o = 0; o < d; o++) {
            for (f = e = r = F[0] = 0; r < d; r++) (a = A[r + d * o]) == e ? F[f]++ : F[++f] = 1, 
            n += (e = a) ? 1 : -1;
            t += B(f);
        }
        n < 0 && (n = -n);
        var c = n, i = 0;
        for (c += c << 2, c <<= 1; d * d < c; ) c -= d * d, i++;
        for (t += i * j, r = 0; r < d; r++) {
            for (f = e = o = F[0] = 0; o < d; o++) (a = A[r + d * o]) == e ? F[f]++ : F[++f] = 1, 
            e = a;
            t += B(f);
        }
        return t;
    }
    var E = null, r = {
        get ecclevel() {
            return M;
        },
        set ecclevel(r) {
            M = r;
        },
        get size() {
            return _size;
        },
        set size(r) {
            _size = r;
        },
        get canvas() {
            return E;
        },
        set canvas(r) {
            E = r;
        },
        getFrame: function(r) {
            return function(r) {
                var o, f, e, a, t, n, c, i;
                a = r.length, s = 0;
                do {
                    if (e = 4 * (M - 1) + 16 * (++s - 1), l = w[e++], u = w[e++], v = w[e++], b = w[e], 
                    a <= (e = v * (l + u) + u - 3 + (s <= 9))) break;
                } while (s < 40);
                for (d = 17 + 4 * s, t = v + (v + b) * (l + u) + u, a = 0; a < t; a++) p[a] = 0;
                for (z = r.slice(0), a = 0; a < d * d; a++) A[a] = 0;
                for (a = 0; a < (d * (d + 1) + 1) / 2; a++) C[a] = 0;
                for (a = 0; a < 3; a++) {
                    for (f = e = 0, 1 == a && (e = d - 7), 2 == a && (f = d - 7), A[f + 3 + d * (e + 3)] = 1, 
                    o = 0; o < 6; o++) A[f + o + d * e] = 1, A[f + d * (e + o + 1)] = 1, A[f + 6 + d * (e + o)] = 1, 
                    A[f + o + 1 + d * (e + 6)] = 1;
                    for (o = 1; o < 5; o++) R(f + o, e + 1), R(f + 1, e + o + 1), R(f + 5, e + o), R(f + o + 1, e + 5);
                    for (o = 2; o < 4; o++) A[f + o + d * (e + 2)] = 1, A[f + 2 + d * (e + o + 1)] = 1, 
                    A[f + 4 + d * (e + o)] = 1, A[f + o + 1 + d * (e + 4)] = 1;
                }
                if (1 < s) for (a = h[s], f = d - 7; ;) {
                    for (o = d - 7; a - 3 < o && (Q(o, f), !(o < a)); ) o -= a;
                    if (f <= a + 9) break;
                    Q(6, f -= a), Q(f, 6);
                }
                for (A[8 + d * (d - 8)] = 1, f = 0; f < 7; f++) R(7, f), R(d - 8, f), R(7, f + d - 7);
                for (o = 0; o < 8; o++) R(o, 7), R(o + d - 8, 7), R(o, d - 8);
                for (o = 0; o < 9; o++) R(o, 8);
                for (o = 0; o < 8; o++) R(o + d - 8, 8), R(8, o);
                for (f = 0; f < 7; f++) R(8, f + d - 7);
                for (o = 0; o < d - 14; o++) 1 & o ? (R(8 + o, 6), R(6, 8 + o)) : (A[8 + o + 6 * d] = 1, 
                A[6 + d * (8 + o)] = 1);
                if (6 < s) for (a = k[s - 7], e = 17, o = 0; o < 6; o++) for (f = 0; f < 3; f++, 
                e--) 1 & (11 < e ? s >> e - 12 : a >> e) ? (A[5 - o + d * (2 - f + d - 11)] = 1, 
                A[2 - f + d - 11 + d * (5 - o)] = 1) : (R(5 - o, 2 - f + d - 11), R(2 - f + d - 11, 5 - o));
                for (f = 0; f < d; f++) for (o = 0; o <= f; o++) A[o + d * f] && R(o, f);
                for (t = z.length, n = 0; n < t; n++) p[n] = z.charCodeAt(n);
                if (z = p.slice(0), (o = v * (l + u) + u) - 2 <= t && (t = o - 2, 9 < s && t--), 
                n = t, 9 < s) {
                    for (z[n + 2] = 0, z[n + 3] = 0; n--; ) a = z[n], z[n + 3] |= 255 & a << 4, z[n + 2] = a >> 4;
                    z[2] |= 255 & t << 4, z[1] = t >> 4, z[0] = 64 | t >> 12;
                } else {
                    for (z[n + 1] = 0, z[n + 2] = 0; n--; ) a = z[n], z[n + 2] |= 255 & a << 4, z[n + 1] = a >> 4;
                    z[1] |= 255 & t << 4, z[0] = 64 | t >> 4;
                }
                for (n = t + 3 - (s < 10); n < o; ) z[n++] = 236, z[n++] = 17;
                for (q[0] = 1, n = 0; n < b; n++) {
                    for (q[n + 1] = 1, c = n; 0 < c; c--) q[c] = q[c] ? q[c - 1] ^ x[_(m[q[c]] + n)] : q[c - 1];
                    q[0] = x[_(m[q[0]] + n)];
                }
                for (n = 0; n <= b; n++) q[n] = m[q[n]];
                for (e = o, n = f = 0; n < l; n++) y(f, v, e, b), f += v, e += b;
                for (n = 0; n < u; n++) y(f, v + 1, e, b), f += v + 1, e += b;
                for (n = f = 0; n < v; n++) {
                    for (c = 0; c < l; c++) p[f++] = z[n + c * v];
                    for (c = 0; c < u; c++) p[f++] = z[l * v + n + c * (v + 1)];
                }
                for (c = 0; c < u; c++) p[f++] = z[l * v + n + c * (v + 1)];
                for (n = 0; n < b; n++) for (c = 0; c < l + u; c++) p[f++] = z[o + n + c * b];
                for (z = p, o = f = d - 1, e = t = 1, i = (v + b) * (l + u) + u, n = 0; n < i; n++) for (a = z[n], 
                c = 0; c < 8; c++, a <<= 1) for (128 & a && (A[o + d * f] = 1); t ? o-- : (o++, 
                e ? 0 != f ? f-- : (e = !e, 6 == (o -= 2) && (o--, f = 9)) : f != d - 1 ? f++ : (e = !e, 
                6 == (o -= 2) && (o--, f -= 8))), t = !t, I(o, f); ) ;
                for (z = A.slice(0), f = 3e4, e = a = 0; e < 8 && (N(e), (o = D()) < f && (f = o, 
                a = e), 7 != a); e++) A = z.slice(0);
                for (a != e && N(a), f = g[a + (M - 1 << 3)], e = 0; e < 8; e++, f >>= 1) 1 & f && (A[d - 1 - e + 8 * d] = 1, 
                e < 6 ? A[8 + d * e] = 1 : A[8 + d * (e + 1)] = 1);
                for (e = 0; e < 7; e++, f >>= 1) 1 & f && (A[8 + d * (d - 7 + e)] = 1, e ? A[6 - e + 8 * d] = 1 : A[7 + 8 * d] = 1);
                return A;
            }(r);
        },
        draw: function(r, o, f, e, a) {
            if (M = a || M, o = o || E) {
                var t = Math.min(f, e), n = this.getFrame(r), c = wx.createContext(), i = Math.round(t / (d + 8)), s = i * (d + 8), l = Math.floor((t - s) / 2);
                t = s, c.clearRect(0, 0, f, f), c.setFillStyle("#000000");
                for (var u = 0; u < d; u++) for (var v = 0; v < d; v++) n[v * d + u] && c.rect(i * (4 + u) + l, i * (4 + v) + l, i, i);
                c.fill(), wx.drawCanvas({
                    canvasId: o,
                    actions: c.getActions()
                });
            } else console.warn("No canvas provided to draw QR code in!");
        }
    };
    module.exports = {
        qrApi: r
    };
}();